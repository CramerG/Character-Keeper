{"version":3,"sources":["components/UserNav.js","components/Navbar.js","views/Main.js","views/SignUp.js","views/SignIn.js","components/CharacterForm.js","components/CharacterAdd.js","views/Characters.js","components/EditButton.js","components/DeleteButton.js","components/CharacterList.js","components/CharacterEdit.js","views/Groups.js","components/GroupAdd.js","components/GroupList.js","App.js","serviceWorker.js","index.js"],"names":["UserNav","props","className","to","Navbar","onClick","navigate","Main","SignUp","useState","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","onSubmit","e","preventDefault","user","axios","post","then","res","console","log","data","msg","catch","err","type","required","onChange","target","value","SignIn","defaults","withCredentials","error","setError","showError","CharacterForm","name","setName","charClass","setCharClass","race","setRace","level","setLevel","str","setStr","dex","setDex","con","setCon","int","setInt","wis","setWis","cha","setCha","ac","setAC","thac0","setThac0","useEffect","undefined","id","get","char","character","class","send","min","max","CharacterAdd","Characters","children","EditButton","DeleteButton","CharacterList","characters","setCharacters","length","map","idx","key","_id","CharacterEdit","put","Groups","GroupAdd","GroupList","groups","showGroups","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.df58f5bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from '@reach/router';\r\nimport '../styles/UserNav.styles.css';\r\n\r\nconst UserNav = props => {\r\n\r\n    return(\r\n        <div className=\"usernav\">\r\n            <Link to=\"/signup\" className=\"linkText\">Sign Up</Link>\r\n            <Link to=\"/signin\" className=\"linkText\">Log In</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserNav;","import React from 'react';\r\nimport '../styles/Navbar.styles.css';\r\nimport { Link, navigate } from '@reach/router';\r\nimport UserNav from './UserNav';\r\n\r\nconst Navbar = props => {\r\n\r\n    return(\r\n        <div className=\"navbar\">\r\n            <div className=\"title\" onClick={() => {navigate(\"/\")}}>Character Keeper</div>\r\n            <div className=\"links\">\r\n                <Link to=\"/characters/\" className=\"linkText\">Characters</Link>\r\n                <Link to=\"/groups/\" className=\"linkText\">Groups</Link>\r\n                <UserNav/>\r\n                <div className=\"clearboth\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Main = props => {\r\n\r\n    return(\r\n        <div>\r\n            <p>Main</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/SignUp.styles.css';\r\nimport { navigate } from '@reach/router';\r\n\r\nconst SignUp = props => {\r\n    const [username, setUsername] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [confirmPassword, setConfirmPassword] = useState();\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        const user = {\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n            confirmPassword: confirmPassword\r\n        }\r\n        axios.post('http://localhost:8000/api/users', user)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data.msg === \"Login success\") {\r\n                    navigate(\"/characters\");\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return(\r\n        <div className=\"body\">\r\n            <div className=\"sectionHeader\">Sign Up</div>\r\n            <form onSubmit={onSubmitHandler} className=\"signupForm\">\r\n                <div className=\"field\">\r\n                    <label className=\"label\">User Name</label>\r\n                    <input type=\"text\" required onChange={(e) => setUsername(e.target.value)}/>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label className=\"label\">E-Mail</label>\r\n                    <input type=\"text\" required onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Password</label>\r\n                    <input type=\"password\" required onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Confirm Password</label>\r\n                    <input type=\"password\" required onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n                </div>\r\n                <input type=\"submit\" value=\"Sign Up\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/SignUp.styles.css';\r\nimport { navigate } from '@reach/router';\r\n\r\nconst SignIn = props => {\r\n    axios.defaults.withCredentials = true;\r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        const user = {\r\n            username: username,\r\n            password: password\r\n        }\r\n        axios.post('http://localhost:8000/api/users/login', user)\r\n            .then(res => {\r\n                console.log(\"Login Success\")\r\n                setError(\"\");\r\n                navigate(\"/characters\");\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setError(\"No Match\");\r\n            });\r\n    }\r\n\r\n    const showError = () => {\r\n        if(error === \"No Match\") {\r\n            return(\r\n                <p className=\"formError\">Username or password incorrect</p>\r\n            );\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"sectionHeader\">Sign In</div>\r\n            <form onSubmit={onSubmitHandler} className=\"signupForm\">\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Username</label>\r\n                    <input type=\"text\" required onChange={(e) => {setUsername(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Password</label>\r\n                    <input type=\"password\" required onChange={(e) => {setPassword(e.target.value)}}/>\r\n                </div>\r\n                {showError()}\r\n                <input type=\"submit\" value=\"Sign In\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignIn;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/SignUp.styles.css';\r\nimport '../styles/character.styles.css';\r\n\r\nconst CharacterForm = props => {\r\n    axios.defaults.withCredentials = true;\r\n    const [name, setName] = useState();\r\n    const [charClass, setCharClass] = useState(\"fighter\");\r\n    const [race, setRace] = useState(\"human\");\r\n    const [level, setLevel] = useState();\r\n    const [str, setStr] = useState();\r\n    const [dex, setDex] = useState();\r\n    const [con, setCon] = useState();\r\n    const [int, setInt] = useState();\r\n    const [wis, setWis] = useState();\r\n    const [cha, setCha] = useState();\r\n    const [ac, setAC] = useState();\r\n    const [thac0, setThac0] = useState();\r\n\r\n    useEffect( () => {\r\n        if(props.id !== undefined) {\r\n            axios.get('http://localhost:8000/api/bx/' + props.id)\r\n                .then(res => {\r\n                    const char = res.data.character[0];\r\n                    console.log(char);\r\n                    setName(char.name);\r\n                    setCharClass(char.class);\r\n                    setRace(char.race);\r\n                    setLevel(char.level);\r\n                    setStr(char.str);\r\n                    setDex(char.dex);\r\n                    setCon(char.con);\r\n                    setInt(char.int);\r\n                    setWis(char.wis);\r\n                    setCha(char.cha);\r\n                    setAC(char.ac);\r\n                    setThac0(char.thac0);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        const character = {\r\n            name: name,\r\n            class: charClass,\r\n            race: race,\r\n            level: level,\r\n            str: str,\r\n            dex: dex,\r\n            con: con,\r\n            int: int,\r\n            wis: wis,\r\n            cha: cha,\r\n            ac: ac,\r\n            thac0: thac0\r\n        };\r\n\r\n        props.send(character);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={onSubmitHandler} className=\"charForm\">\r\n                <div className=\"fieldWrapperW\">\r\n                    <label className=\"label\">Name</label>\r\n                    <input type=\"text\" required value={name} onChange={(e) => {setName(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"clearBoth\"/>\r\n                <div className=\"fieldWrapperW\">\r\n                    <div className=\"statW\">\r\n                        <label className=\"label\">Class</label>\r\n                        <select onChange={(e) => {setCharClass(e.target.value)}} value={charClass}>\r\n                            <option value=\"fighter\">Fighter</option>\r\n                            <option value=\"cleric\">Cleric</option>\r\n                            <option value=\"magicuser\">Magic User</option>\r\n                            <option value=\"thief\">Thief</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"statL\">\r\n                        <label className=\"label\">Race</label>\r\n                        <select onChange={(e) => {setRace(e.target.value)}} value={race}> \r\n                            <option value=\"human\">Human</option>\r\n                            <option value=\"elf\">Elf</option>\r\n                            <option value=\"dwarf\">Dwarf</option>\r\n                            <option value=\"halfling\">Halfling</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"clearBoth\"/>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Level</label>\r\n                    <input type=\"number\" min=\"1\" max=\"20\" required value={level} onChange={(e) => {setLevel(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"fieldWrapper\">\r\n                    <div className=\"statL\">\r\n                        <label className=\"label\">Strength</label>\r\n                        <input type=\"number\" min=\"1\" max=\"20\" required value={str} onChange={(e) => {setStr(e.target.value)}}/>\r\n                    </div>\r\n                    <div className=\"statL\">\r\n                        <label className=\"label\">Dexterity</label>\r\n                        <input type=\"number\" min=\"1\" max=\"20\" required value={dex} onChange={(e) => {setDex(e.target.value)}}/>\r\n                    </div>\r\n                    <div className=\"clearBoth\"/>\r\n                </div>\r\n                <div className=\"fieldWrapper\">\r\n                    <div className=\"statL\">\r\n                        <label className=\"label\">Constitution</label>\r\n                        <input type=\"number\" min=\"1\" max=\"20\" required value={con} onChange={(e) => {setCon(e.target.value)}}/>\r\n                    </div>\r\n                    <div className=\"statL\">\r\n                        <label className=\"label\">Intelegence</label>\r\n                        <input type=\"number\" min=\"1\" max=\"20\" required value={int} onChange={(e) => {setInt(e.target.value)}}/>\r\n                    </div>\r\n                    <div className=\"clearBoth\"/>\r\n                </div>\r\n                <div className=\"fieldWrapper\">\r\n                    <div className=\"statL\">\r\n                        <label className=\"label\">Wisdom</label>\r\n                        <input type=\"number\" min=\"1\" max=\"20\" required value={wis} onChange={(e) => {setWis(e.target.value)}}/>\r\n                    </div>\r\n                    <div className=\"statL\">\r\n                        <label className=\"label\">Charisma</label>\r\n                        <input type=\"number\" min=\"1\" max=\"20\" required value={cha} onChange={(e) => {setCha(e.target.value)}}/>\r\n                    </div>\r\n                <div className=\"clearBoth\"/>\r\n                </div>\r\n                <div className=\"fieldWrapper\">\r\n                    <div className=\"statL\">\r\n                        <label className=\"label\">Armor Class</label>\r\n                        <input type=\"number\" min=\"-5\" max=\"20\" required value={ac} onChange={(e) => {setAC(e.target.value)}}/>\r\n                    </div>\r\n                    <div className=\"statL\">\r\n                        <label className=\"label\">THAC0</label>\r\n                        <input type=\"number\" min=\"1\" max=\"20\" required value={thac0} onChange={(e) => {setThac0(e.target.value)}}/>\r\n                    </div>\r\n                    <div className=\"clearBoth\"/>\r\n                </div>\r\n                <input type=\"submit\" value=\"Create\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CharacterForm;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\nimport CharacterForm from './CharacterForm';\r\n\r\nconst CharacterAdd = props => {\r\n    axios.defaults.withCredentials = true;\r\n\r\n    const onSubmitHandler = (character) => {\r\n        axios.post('http://localhost:8000/api/bx', character)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data.error === undefined) {\r\n                    navigate(\"/characters\");\r\n                }\r\n\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"sectionHeader\">Add New Character</div>\r\n            <CharacterForm send={onSubmitHandler}/>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default CharacterAdd;","import React from 'react';\r\nimport '../styles/character.styles.css';\r\nimport { Link } from '@reach/router';\r\n\r\nconst Characters = props => {\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"sectionHeader\">Characters</div>\r\n            <Link to=\"/characters\" className=\"interiorLinkText\">Saved Characters</Link>\r\n            <Link to=\"/characters/add\" className=\"interiorLinkText\">Create New Character</Link>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Characters;","import React from 'react';\r\nimport '../styles/Buttons.styles.css';\r\nimport { navigate } from '@reach/router';\r\n\r\nconst EditButton = props => {\r\n\r\n    return(\r\n        <div className=\"edit\" onClick={() => {navigate(\"/characters/edit/\" + props.id)}}>Edit</div>\r\n    )\r\n}\r\n\r\nexport default EditButton;","import React from 'react';\r\n\r\nconst DeleteButton = props => {\r\n\r\n    return(\r\n        <div className=\"delete\">Delete</div>\r\n    )\r\n}\r\n\r\nexport default DeleteButton;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/character.styles.css';\r\nimport EditButton from './EditButton';\r\nimport DeleteButton from './DeleteButton';\r\n\r\nconst CharacterList = props => {\r\n    axios.defaults.withCredentials = true;\r\n    const [characters, setCharacters] = useState([]);\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/bx')\r\n            .then(res => setCharacters(res.data))\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const showCharacters = () => {\r\n        if (characters.length === 0) {\r\n            return(\r\n                <p>You have no characters for this eddition</p>\r\n            );\r\n        } else {\r\n            return(\r\n                characters.map((char, idx) => {\r\n                    return(\r\n                        <div className=\"charSheet\" key={idx}>\r\n                            <div className=\"infoLine\">Name: {char.name}</div>\r\n                            <div className=\"clearBoth\"/>\r\n                            <div className=\"infoLine\">Race: {char.race}</div>\r\n                            <div className=\"infoLine\">Class: {char.class}</div>\r\n                            <div className=\"infoLine\">Level: {char.level}</div>\r\n                            <div className=\"clearBoth\"/>\r\n                            <div className=\"infoLine\">Str: {char.str}</div>\r\n                            <div className=\"infoLine\">Dex: {char.dex}</div>\r\n                            <div className=\"infoLine\">Con: {char.con}</div>\r\n                            <div className=\"infoLine\">Int: {char.int}</div>\r\n                            <div className=\"infoLine\">Wis: {char.wis}</div>\r\n                            <div className=\"infoLine\">Cha: {char.cha}</div>\r\n                            <div className=\"clearBoth\"/>\r\n                            <div className=\"infoLine\">AC: {char.ac}</div>\r\n                            <div className=\"infoLine\">THAC0: {char.thac0}</div>\r\n                            <div className=\"clearBoth\"/>\r\n                            <EditButton id={char._id}/>\r\n                            <DeleteButton/>\r\n                            <div className=\"clearBoth\"/>\r\n                        </div>\r\n                    );\r\n                })\r\n            );      \r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"sectionHeader\">B/X Characters</div>\r\n            {showCharacters()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterList;","import React from 'react';\r\nimport axios from 'axios';\r\nimport CharacterForm from './CharacterForm';\r\nimport { navigate } from '@reach/router';\r\n\r\nconst CharacterEdit = props => {\r\n    axios.defaults.withCredentials = true;\r\n\r\n    const editCharacter = (char) => {\r\n        axios.put('http://localhost:8000/api/bx', {id: props.id, character: char})\r\n            .then(res => {\r\n                console.log(res);\r\n                navigate(\"/characters\");\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"sectionHeader\">Edit Character</div>\r\n            <CharacterForm send={editCharacter} id={props.id}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CharacterEdit;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from '@reach/router';\r\nimport '../styles/SignUp.styles.css'\r\n\r\nconst Groups = (props) => {\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"sectionHeader\">Your Groups</div>\r\n            <Link to=\"/groups/add/\" className=\"interiorLinkText\">Create Group</Link>\r\n            <Link to=\"\" className=\"interiorLinkText\">Join Group</Link>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Groups;","import React from 'react';\r\nimport Groups from '../views/Groups';\r\n\r\nconst GroupAdd = props => {\r\n    return(\r\n        <div>Add Group</div>\r\n    );\r\n}\r\n\r\nexport default GroupAdd;","import React, {useState} from 'react';\r\n\r\nconst GroupList = (props) => {\r\n    const [groups, setGroups] = useState([]);\r\n\r\n    const findGroups = () => {\r\n        \r\n    }\r\n\r\n    const showGroups = () => {\r\n        if (groups.length == 0) {\r\n            return(\r\n                <div>You do not belong to any groups</div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {showGroups()}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default GroupList;","import React from 'react';\nimport {Router} from '@reach/router';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Main from './views/Main';\nimport SignUp from './views/SignUp';\nimport SignIn from './views/SignIn';\nimport CharacterAdd from './components/CharacterAdd';\nimport Characters from './views/Characters';\nimport CharacterList from './components/CharacterList';\nimport CharacterEdit from './components/CharacterEdit';\nimport Groups from './views/Groups';\nimport GroupAdd from './components/GroupAdd';\nimport GroupList from './components/GroupList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Router>\n        <Main path=\"/\"/>\n        <SignUp path=\"/signup\"/>\n        <SignIn path=\"/signin\"/>\n        <Characters path=\"/characters\">\n          <CharacterList path=\"/\"/>\n          <CharacterAdd path=\"/add\"/>\n          <CharacterEdit path=\"/edit/:id\"/>\n        </Characters>\n        <Groups path=\"/groups\">\n          <GroupList path=\"/\"/>\n          <GroupAdd path=\"/add\"/>\n        </Groups> \n        \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}